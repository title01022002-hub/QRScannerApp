name: Build and Release QRScanner AppImage

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # 1. Checkout code
    - name: Checkout code
      uses: actions/checkout@v4

    # 2. Setup Python
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    # 3. Install dependencies
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller

    # 4. Build binary with PyInstaller
    - name: Build binary
      run: |
        pyinstaller --onefile --name QRScanner main.py

    # 5. Install ImageMagick & AppImageTool
    - name: Install ImageMagick & AppImageTool
      run: |
        sudo apt-get update
        sudo apt-get install -y imagemagick wget jq
        # Lấy AppImageTool mới nhất
        APPIMAGE_URL=$(curl -s https://api.github.com/repos/AppImage/AppImageKit/releases/latest \
          | jq -r '.assets[] | select(.name | test("appimagetool.*x86_64.AppImage$")) | .browser_download_url')
        wget "$APPIMAGE_URL" -O appimagetool
        chmod +x appimagetool
        sudo mv appimagetool /usr/local/bin/appimagetool

    # 6. Prepare AppImage folder
    - name: Prepare AppDir
      run: |
        mkdir -p AppDir/usr/bin
        cp dist/QRScanner AppDir/usr/bin/
        mkdir -p AppDir/usr/share/applications
        mkdir -p AppDir/usr/share/icons/hicolor/256x256/apps

        # Create .desktop file
        cat > AppDir/usr/share/applications/QRScanner.desktop <<EOF
[Desktop Entry]
Type=Application
Name=QRScanner
Exec=QRScanner
Icon=QRScanner
Categories=Utility;
EOF

        # Create icon
        convert -size 256x256 xc:white -gravity center -pointsize 72 -annotate 0 "QR" QRScanner.png
        cp QRScanner.png AppDir/usr/share/icons/hicolor/256x256/apps/QRScanner.png

    # 7. Build AppImage
    - name: Build AppImage
      run: |
        appimagetool AppDir QRScanner.AppImage

    # 8. Upload AppImage artifact
    - name: Upload AppImage as Artifact
      uses: actions/upload-artifact@v4
      with:
        name: QRScanner-AppImage
        path: QRScanner.AppImage

    # 9. Create GitHub Release
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v1.0.${{ github.run_number }}
        name: QRScanner v1.0.${{ github.run_number }}
        files: QRScanner.AppImage
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
